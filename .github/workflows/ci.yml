# SPDX-License-Identifier: MIT
name: CI

on:
  push:
    branches:
    - dependabot/**
    - feature/**
    paths-ignore:
    - '**.md'
    - '.gitignore'
  pull_request:
    branches:
    - main

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
    - uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install packages
      run: |
        npm ci
    - name: Compile Node.js module
      run: |
        npm run all

    - name: Run action
      id: extract-release-notes-1
      uses: ./
    - name: Assert that release_notes output is not empty
      shell: bash
      env:
        RELEASE_NOTES: ${{ steps.extract-release-notes-1.outputs.release_notes }}
      run: |
        test -n "${RELEASE_NOTES}"

    - name: Run action
      id: extract-release-notes-2
      uses: ./
      with:
        release_notes_file: RELEASE_NOTES.md
    - name: Assert that RELEASE_NOTES.md exists
      shell: bash
      run: |
        test -f RELEASE_NOTES.md

    - name: Run action
      id: extract-release-notes-3
      uses: ./
      with:
        changelog_file: test/testdata/CHANGELOG_1.md
    - name: Assert that release_notes output contains expected content
      shell: bash
      env:
        RELEASE_NOTES: ${{ steps.extract-release-notes-3.outputs.release_notes }}
      run: |
        diff <(echo -n "${RELEASE_NOTES}") test/testdata/expected/RELEASE_NOTES_1.md

    - name: Run action
      id: extract-release-notes-4
      uses: ./
      with:
        changelog_file: test/testdata/CHANGELOG_2.md
    - name: Assert that release_notes output contains expected content
      shell: bash
      env:
        RELEASE_NOTES: ${{ steps.extract-release-notes-4.outputs.release_notes }}
      run: |
        diff <(echo -n "${RELEASE_NOTES}") test/testdata/expected/RELEASE_NOTES_2.md

    - name: Run action
      id: extract-release-notes-5
      uses: ./
      with:
        changelog_file: test/testdata/CHANGELOG_3.md
    - name: Assert that release_notes output contains expected content
      shell: bash
      env:
        RELEASE_NOTES: ${{ steps.extract-release-notes-5.outputs.release_notes }}
      run: |
        diff <(echo -n "${RELEASE_NOTES}") test/testdata/expected/RELEASE_NOTES_3.md

    - name: Run action
      id: extract-release-notes-6
      uses: ./
      with:
        changelog_file: test/testdata/CHANGELOG_4.md
        prerelease: true
    - name: Assert that release_notes output contains expected content
      shell: bash
      env:
        RELEASE_NOTES: ${{ steps.extract-release-notes-6.outputs.release_notes }}
      run: |
        diff <(echo -n "${RELEASE_NOTES}") test/testdata/expected/RELEASE_NOTES_4.md

    - name: Run action
      id: extract-release-notes-7
      uses: ./
      with:
        changelog_file: test/testdata/CHANGELOG_1.md
        release_notes_file: RELEASE_NOTES.md
    - name: Assert that RELEASE_NOTES.md contains expected content
      shell: bash
      env:
        RELEASE_NOTES: ${{ steps.extract-release-notes-7.outputs.release_notes }}
      run: |
        diff RELEASE_NOTES.md test/testdata/expected/RELEASE_NOTES_1.md

    - name: Run action
      id: extract-release-notes-8
      uses: ./
      with:
        changelog_file: test/testdata/CHANGELOG_2.md
        release_notes_file: RELEASE_NOTES.md
    - name: Assert that RELEASE_NOTES.md contains expected content
      shell: bash
      env:
        RELEASE_NOTES: ${{ steps.extract-release-notes-8.outputs.release_notes }}
      run: |
        diff RELEASE_NOTES.md test/testdata/expected/RELEASE_NOTES_2.md

    - name: Run action
      id: extract-release-notes-9
      uses: ./
      with:
        changelog_file: test/testdata/CHANGELOG_3.md
        release_notes_file: RELEASE_NOTES.md
    - name: Assert that RELEASE_NOTES.md contains expected content
      shell: bash
      env:
        RELEASE_NOTES: ${{ steps.extract-release-notes-9.outputs.release_notes }}
      run: |
        diff RELEASE_NOTES.md test/testdata/expected/RELEASE_NOTES_3.md
    - name: Run action
      id: extract-release-notes-10
      uses: ./
      with:
        changelog_file: test/testdata/CHANGELOG_5.md
        version_prefix: v
    - name: Assert that release_notes contains expected content
      shell: bash
      env:
        RELEASE_NOTES: ${{ steps.extract-release-notes-10.outputs.release_notes }}
      run: |
        diff <(echo -n "${RELEASE_NOTES}") test/testdata/expected/RELEASE_NOTES_1.md
    - name: Run action
      id: extract-release-notes-11
      uses: ./
      with:
        changelog_file: test/testdata/CHANGELOG_6.md
        header_level: 3
    - name: Assert that release_notes contains expected content
      shell: bash
      env:
        RELEASE_NOTES: ${{ steps.extract-release-notes-11.outputs.release_notes }}
      run: |
        diff <(echo -n "${RELEASE_NOTES}") test/testdata/expected/RELEASE_NOTES_6.md
    - name: Run action
      id: extract-release-notes-12
      uses: ./
      with:
        changelog_file: test/testdata/CHANGELOG_7.md
        version_prefix: version
    - name: Assert that release_notes contains expected content
      shell: bash
      env:
        RELEASE_NOTES: ${{ steps.extract-release-notes-12.outputs.release_notes }}
      run: |
        diff <(echo -n "${RELEASE_NOTES}") test/testdata/expected/RELEASE_NOTES_1.md
